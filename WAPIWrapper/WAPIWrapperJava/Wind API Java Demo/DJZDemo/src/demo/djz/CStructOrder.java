package demo.djz;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("DJZTrading") 
public class CStructOrder extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int adaptorId() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public CStructOrder adaptorId(int adaptorId) {
		this.io.setIntField(this, 0, adaptorId);
		return this;
	}
	@Field(1) 
	public int id() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public CStructOrder id(int id) {
		this.io.setIntField(this, 1, id);
		return this;
	}
	/** C type : char* */
	@Field(2) 
	public Pointer<Byte > instrumentId() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : char* */
	@Field(2) 
	public CStructOrder instrumentId(Pointer<Byte > instrumentId) {
		this.io.setPointerField(this, 2, instrumentId);
		return this;
	}
	/** C type : char* */
	@Field(3) 
	public Pointer<Byte > ref() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : char* */
	@Field(3) 
	public CStructOrder ref(Pointer<Byte > ref) {
		this.io.setPointerField(this, 3, ref);
		return this;
	}
	@Field(4) 
	public byte priceType() {
		return this.io.getByteField(this, 4);
	}
	@Field(4) 
	public CStructOrder priceType(byte priceType) {
		this.io.setByteField(this, 4, priceType);
		return this;
	}
	@Field(5) 
	public byte direction() {
		return this.io.getByteField(this, 5);
	}
	@Field(5) 
	public CStructOrder direction(byte direction) {
		this.io.setByteField(this, 5, direction);
		return this;
	}
	@Field(6) 
	public byte combOffsetFlag() {
		return this.io.getByteField(this, 6);
	}
	@Field(6) 
	public CStructOrder combOffsetFlag(byte combOffsetFlag) {
		this.io.setByteField(this, 6, combOffsetFlag);
		return this;
	}
	@Field(7) 
	public byte combHedgeFlag() {
		return this.io.getByteField(this, 7);
	}
	@Field(7) 
	public CStructOrder combHedgeFlag(byte combHedgeFlag) {
		this.io.setByteField(this, 7, combHedgeFlag);
		return this;
	}
	@Field(8) 
	public double limitPrice() {
		return this.io.getDoubleField(this, 8);
	}
	@Field(8) 
	public CStructOrder limitPrice(double limitPrice) {
		this.io.setDoubleField(this, 8, limitPrice);
		return this;
	}
	@Field(9) 
	public int volumeTotalOriginal() {
		return this.io.getIntField(this, 9);
	}
	@Field(9) 
	public CStructOrder volumeTotalOriginal(int volumeTotalOriginal) {
		this.io.setIntField(this, 9, volumeTotalOriginal);
		return this;
	}
	@Field(10) 
	public byte timeCondition() {
		return this.io.getByteField(this, 10);
	}
	@Field(10) 
	public CStructOrder timeCondition(byte timeCondition) {
		this.io.setByteField(this, 10, timeCondition);
		return this;
	}
	/**
	 * not used<br>
	 * C type : char*
	 */
	@Field(11) 
	public Pointer<Byte > GTDDate() {
		return this.io.getPointerField(this, 11);
	}
	/**
	 * not used<br>
	 * C type : char*
	 */
	@Field(11) 
	public CStructOrder GTDDate(Pointer<Byte > GTDDate) {
		this.io.setPointerField(this, 11, GTDDate);
		return this;
	}
	/** not used */
	@Field(12) 
	public byte volumeCondition() {
		return this.io.getByteField(this, 12);
	}
	/** not used */
	@Field(12) 
	public CStructOrder volumeCondition(byte volumeCondition) {
		this.io.setByteField(this, 12, volumeCondition);
		return this;
	}
	@Field(13) 
	public int minVolume() {
		return this.io.getIntField(this, 13);
	}
	@Field(13) 
	public CStructOrder minVolume(int minVolume) {
		this.io.setIntField(this, 13, minVolume);
		return this;
	}
	@Field(14) 
	public byte contingentCondition() {
		return this.io.getByteField(this, 14);
	}
	@Field(14) 
	public CStructOrder contingentCondition(byte contingentCondition) {
		this.io.setByteField(this, 14, contingentCondition);
		return this;
	}
	@Field(15) 
	public double stopPrice() {
		return this.io.getDoubleField(this, 15);
	}
	@Field(15) 
	public CStructOrder stopPrice(double stopPrice) {
		this.io.setDoubleField(this, 15, stopPrice);
		return this;
	}
	@Field(16) 
	public byte forceCloseReason() {
		return this.io.getByteField(this, 16);
	}
	@Field(16) 
	public CStructOrder forceCloseReason(byte forceCloseReason) {
		this.io.setByteField(this, 16, forceCloseReason);
		return this;
	}
	@Field(17) 
	public int isAutoSuspend() {
		return this.io.getIntField(this, 17);
	}
	@Field(17) 
	public CStructOrder isAutoSuspend(int isAutoSuspend) {
		this.io.setIntField(this, 17, isAutoSuspend);
		return this;
	}
	/**
	 * not used<br>
	 * C type : char*
	 */
	@Field(18) 
	public Pointer<Byte > businessUnit() {
		return this.io.getPointerField(this, 18);
	}
	/**
	 * not used<br>
	 * C type : char*
	 */
	@Field(18) 
	public CStructOrder businessUnit(Pointer<Byte > businessUnit) {
		this.io.setPointerField(this, 18, businessUnit);
		return this;
	}
	/** notused */
	@Field(19) 
	public int requestId() {
		return this.io.getIntField(this, 19);
	}
	/** notused */
	@Field(19) 
	public CStructOrder requestId(int requestId) {
		this.io.setIntField(this, 19, requestId);
		return this;
	}
	@Field(20) 
	public int userForceClose() {
		return this.io.getIntField(this, 20);
	}
	@Field(20) 
	public CStructOrder userForceClose(int userForceClose) {
		this.io.setIntField(this, 20, userForceClose);
		return this;
	}
	@Field(21) 
	public long reciveMarketTime() {
		return this.io.getLongField(this, 21);
	}
	@Field(21) 
	public CStructOrder reciveMarketTime(long reciveMarketTime) {
		this.io.setLongField(this, 21, reciveMarketTime);
		return this;
	}
	/** C type : char* */
	@Field(22) 
	public Pointer<Byte > sysId() {
		return this.io.getPointerField(this, 22);
	}
	/** C type : char* */
	@Field(22) 
	public CStructOrder sysId(Pointer<Byte > sysId) {
		this.io.setPointerField(this, 22, sysId);
		return this;
	}
	/** C type : char* */
	@Field(23) 
	public Pointer<Byte > exchangeId() {
		return this.io.getPointerField(this, 23);
	}
	/** C type : char* */
	@Field(23) 
	public CStructOrder exchangeId(Pointer<Byte > exchangeId) {
		this.io.setPointerField(this, 23, exchangeId);
		return this;
	}
	public CStructOrder() {
		super();
	}
	public CStructOrder(Pointer pointer) {
		super(pointer);
	}
}
